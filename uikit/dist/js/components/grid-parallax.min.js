/*! UIkit 3.0.0-beta.40 | http://www.getuikit.com | (c) 2014 - 2017 YOOtheme | MIT License */

!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define("uikitgrid_parallax",e):t.UIkitGrid_parallax=e()}(this,function(){"use strict";function a(t){if(!a.installed){var e=t.util,n=e.addClass,o=e.css,r=e.scrolledOver,i=e.sortBy,s=e.toFloat;t.component("grid-parallax",t.components.grid.extend({props:{target:String,translate:Number},defaults:{target:!1,translate:150},computed:{translate:function(t){var e=t.translate;return Math.abs(e)}},init:function(){n(this.$el,"uk-grid")},disconnected:function(){this.reset(),o(this.$el,"marginBottom","")},update:[{read:function(t){var e=t.rows;return{columns:e&&e[0]&&e[0].length||0,rows:e&&e.map(function(t){return i(t,"offsetLeft")})}},write:function(t){var e=t.columns;o(this.$el,"marginBottom",1<e?this.translate+s(o(o(this.$el,"marginBottom",""),"marginBottom")):"")},events:["load","resize"]},{read:function(){return{scrolled:r(this.$el)*this.translate}},write:function(t){var e=t.rows,n=t.columns,r=t.scrolled;if(!e||1===n||!r)return this.reset();e.forEach(function(t){return t.forEach(function(t,e){return o(t,"transform","translateY("+(e%2?r:r/8)+"px)")})})},events:["scroll","load","resize"]}],methods:{reset:function(){o(this.$el.children,"transform","")}}})),t.components.gridParallax.options.update.unshift({read:function(){this.reset()},events:["load","resize"]})}}return"undefined"!=typeof window&&window.UIkit&&window.UIkit.use(a),a});